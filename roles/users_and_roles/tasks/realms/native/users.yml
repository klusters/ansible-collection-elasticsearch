---

- name: List Native Users
  uri:
    url: "{{ es_api_uri }}/{{ es_security_api }}/user"
    method: GET
    user: "{{ es_api_basic_auth_username }}"
    password: "{{ es_api_basic_auth_password }}"
    force_basic_auth: yes
    status_code: 200
    validate_certs: "{{ es_validate_certs }}"
  register: user_list_response
  check_mode: no

- name: set fact reserved_users equals user_list_response.json
  set_fact: reserved_users={{ user_list_response.json | klusters.elasticsearch.filter_reserved }}

- name: set fact current_users equals user_list_response.json.keys not including reserved
  set_fact: current_users={{ user_list_response.json.keys() | list | difference (reserved_users) }}

- name: set fact native_users
  set_fact: native_users={{ es_users.native }}

- name: set fact es_api_change_password to true
  set_fact: es_api_change_password=true
  when: es_api_basic_auth_username in native_users and native_users[es_api_basic_auth_username].password is defined

- name: Update API User Password
  uri:
    url: "{{ es_api_uri }}/{{ es_security_api }}/user/{{ es_api_basic_auth_username }}/_password"
    method: POST
    body_format: json
    body: "{ \"password\":\"{{ native_users[es_api_basic_auth_username].password }}\" }"
    status_code: 200
    user: "{{ es_api_basic_auth_username }}"
    password: "{{ es_api_basic_auth_password }}"
    force_basic_auth: yes
    validate_certs: "{{ es_validate_certs }}"
  when: es_api_change_password

- name: set fact es_api_basic_auth_password
  set_fact: es_api_basic_auth_password={{ native_users[es_api_basic_auth_username].password }}
  when: es_api_change_password

- name: set fact users_to_remove
  set_fact: users_to_remove={{ current_users | difference ( native_users.keys() | list) }}

- name: Delete Native Users
  uri:
    url: "{{ es_api_uri }}/{{ es_security_api }}/user/{{ item }}"
    method: DELETE
    status_code: 200
    user: "{{ es_api_basic_auth_username }}"
    password: "{{ es_api_basic_auth_password }}"
    force_basic_auth: yes
    validate_certs: "{{ es_validate_certs }}"
  when: es_delete_unmanaged_native
  with_items: "{{ users_to_remove | default([]) }}"

- name: set fact users_to_ignore
  set_fact: users_to_ignore={{ native_users.keys() | list | intersect (reserved_users) }}

- name: debug message
  debug:
    msg: "WARNING: YOU CAN ONLY CHANGE THE PASSWORD FOR RESERVED USERS IN THE NATIVE REALM. ANY ROLE CHANGES WILL BE IGNORED: {{ users_to_ignore }}"
  when: users_to_ignore | length > 0

- name: Update Reserved User Passwords
  uri:
    url: "{{ es_api_uri }}/{{ es_security_api }}/user/{{ item | urlencode }}/_password"
    method: POST
    body_format: json
    body: "{ \"password\":\"{{ native_users[item].password }}\" }"
    status_code: 200
    user: "{{ es_api_basic_auth_username }}"
    password: "{{ es_api_basic_auth_password }}"
    force_basic_auth: yes
    validate_certs: "{{ es_validate_certs }}"
  when: native_users[item].password is defined
  with_items: "{{ users_to_ignore | default([]) }}"

- name: set fact users_to_modify
  set_fact: users_to_modify={{ native_users.keys() | list | difference (reserved_users) }}

- name: Update Non-Reserved Native User Details
  uri:
    url: "{{ es_api_uri }}/{{ es_security_api }}/user/{{ item | urlencode }}"
    method: POST
    body_format: json
    body: "{{ native_users[item] | to_json }}"
    status_code: 200
    user: "{{ es_api_basic_auth_username }}"
    password: "{{ es_api_basic_auth_password }}"
    force_basic_auth: yes
    validate_certs: "{{ es_validate_certs }}"
  with_items: "{{ users_to_modify | default([]) }}"
