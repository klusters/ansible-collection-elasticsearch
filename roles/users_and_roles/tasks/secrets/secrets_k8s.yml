---

- name: Create Elasticsearch users' secrets
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ es_cluster_name | regex_replace('_', '-') + '-es-' + item.key | regex_replace('_', '-') + '-user' }}"
        namespace: "{{ es_k8s_namespace }}"
        labels:
          purpose: es_users
          es_cluster: '{{ es_cluster_name }}'
      data:
        user_username: '{{ item.key | b64encode }}'
        user_password: '{{ item.value.password | b64encode }}'
  loop: "{{ lookup('dict', es_users.native) }}"
  loop_control:
    label: "{{ es_cluster_name | regex_replace('_', '-') + '-es-' + item.key | regex_replace('_', '-') + '-user' }}"

...

## USER DICT SYNTAX WITH THIS SECRET MANAGER
# es_users:
#   native:
#     dummy_user_1:
#       password: '{% if es_cluster_name + "-es-dummy-user-1-user" in found_k8s_secrets %}{{ lookup("k8s", kind="Secret", namespace=es_k8s_namespace, resource_name=es_cluster_name + "-es-dummy-user-1-user")["data"]["user_password"] | b64decode }}{% else %}{{ lookup("password", "/dev/null chars=ascii_letters,digits" ) }}{% endif %}'
#       roles:
#       - sample_role_1